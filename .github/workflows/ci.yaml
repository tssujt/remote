name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  Lint:
    name: Pre-Commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: PreCommit
        uses: pre-commit/action@v2.0.3
        with:
          extra_args: --all-files

  Test:
    name: PyTest
    needs: [Lint]
    runs-on: ubuntu-latest
    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ENVIRONMENT: ${{ secrets.SENTRY_ENVIRONMENT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Dependencies And Test
        shell: bash
        run: |
          chmod +x ./tests/ci_test.sh
          ./tests/ci_test.sh

  Docker-Build-Test-Push:
    name: Docker-Build-Test-Push
    needs: [Test]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: remote
      TEST_TAG: remote:test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # can't get git tag if without ${{ github.sha }}
        with:
          ref: ${{ github.sha }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Prepare docker tag name with git tag
        if: ${{ github.ref_type  == 'tag' }}
        run: echo "TAG=${{ github.ref_name }}" >>${GITHUB_ENV}

      - name: Check Image Tag
        run: |
          echo "use commit hash as tag: ${{ github.sha }}"
          echo "use commit tag as tag: $TAG"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          push: false

      # Since the image we build only contains the minimum data needed for running,
      # so we need to actively mount the test data to inside.
      - name: Test In Container
        run: |
          echo "Start running the test script inside the container..."
          docker run --rm \
          --mount type=bind,source=${GITHUB_WORKSPACE}/tests,target=/app/tests \
          --mount type=bind,source=${GITHUB_WORKSPACE}/requirements-test.txt,target=/app/requirements-test.txt \
          ${{ env.TEST_TAG }} \
          bash -c "chmod +x /app/tests/ci_test.sh && /app/tests/ci_test.sh"
          echo "End running the test script inside the container with : $?"

      - name: Push Image
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v2
        env:
          CR_URL: ${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        with:
          context: .
          push: true
          tags: |
            ${{ env.CR_URL }}:latest
            ${{ env.CR_URL }}:${{ github.sha }}
            ${{ env.CR_URL }}:${{ env.TAG || github.sha }}
